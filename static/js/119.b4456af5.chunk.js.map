{"version":3,"file":"static/js/119.b4456af5.chunk.js","mappings":"qMAGaA,GAAWC,EAAAA,EAAAA,GAAOC,EAAAA,GAAPD,CAAH,4GAORE,GAAYF,EAAAA,EAAAA,GAAOG,EAAAA,GAAPH,CAAH,wHAOTI,EAAUJ,EAAAA,EAAAA,OAAH,+MAWPK,GAAYL,EAAAA,EAAAA,GAAOM,EAAAA,GAAPN,CAAH,+D,mBCxBhBO,EAAiBC,EAAAA,GAAW,CAC9BC,KAAMD,EAAAA,GAAW,eAAeE,SAAS,mBACzCC,MAAOH,EAAAA,GAAW,iBAAiBI,IAAI,EAAG,+BAA+BF,SAAS,oBAClFG,QAASL,EAAAA,GAAW,qBAAqBE,SAAS,wBAqCtD,EAjCiB,WAWf,OACE,+BACE,SAAC,KAAD,CAAQI,cAZS,CACnBL,KAAM,GACNE,MAAO,GACPE,QAAS,IAS8BE,iBAAkBR,EAAgBS,SAP1D,SAACC,EAAOC,GACvBC,QAAQC,IAAIH,GACZE,QAAQC,IAAIF,EACb,EAIG,UACE,UAACnB,EAAD,YACE,SAACG,EAAD,CAAWmB,KAAK,OAAOZ,KAAK,OAAOa,YAAY,oBAC/C,SAACjB,EAAD,CAAWkB,UAAU,IAAId,KAAK,UAE9B,SAACP,EAAD,CAAWmB,KAAK,OAAOZ,KAAK,QAAQa,YAAY,qBAEhD,SAACjB,EAAD,CAAWkB,UAAU,IAAId,KAAK,WAC9B,SAACP,EAAD,CAAWmB,KAAK,OAAOZ,KAAK,UAAUa,YAAY,uBAElD,SAACjB,EAAD,CAAWkB,UAAU,IAAId,KAAK,aAE9B,SAACL,EAAD,CAASiB,KAAK,SAAd,6BAKT,E,UCzCYG,EAAe,SAAAC,GAAK,OAAIA,EAAMC,KAAKC,QAAf,ECEpBC,EAAgB5B,EAAAA,EAAAA,IAAH,0GAQb6B,EAAiB7B,EAAAA,EAAAA,GAAH,2FAOd8B,EAAgB9B,EAAAA,EAAAA,GAAH,mFAMb+B,EAAY/B,EAAAA,EAAAA,EAAH,+CAITgC,EAAgBhC,EAAAA,EAAAA,IAAH,4GAObiC,EAAyBjC,EAAAA,EAAAA,IAAH,yFCAnC,EA5Ba,WACX,IAAMkC,GAASC,EAAAA,EAAAA,IAAYX,GAG3B,OAFAL,QAAQC,IAAIc,IAGX,UAACN,EAAD,YACE,SAAC,EAAD,KACD,SAACC,EAAD,UACGK,EAAOE,KAAI,YAAsC,IAAnCC,EAAkC,EAAlCA,GAAIC,EAA8B,EAA9BA,IAAKC,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,KACpC,OACE,UAACX,EAAD,YACE,gBAAKY,IAAKJ,EAAKK,IAAKJ,KACpB,UAACN,EAAD,YACA,UAACD,EAAD,YACA,wBAAKO,KACL,uBAAIE,QAEJ,UAACV,EAAD,YAAW,uCAAX,IAAoCS,UAPlBH,EAYvB,QAIN,EC1BD,EAJiB,WACf,OAAO,SAAC,EAAD,GACR,C","sources":["components/CartForm/CartForm.styled.jsx","components/CartForm/CartForm.jsx","redux/orders/selectors.js","components/Cart/Cart.styled.jsx","components/Cart/Cart.jsx","pages/CartPage.js"],"sourcesContent":["import { Form, Field, ErrorMessage } from \"formik\";\nimport styled from \"@emotion/styled\";\n\nexport const FormCart = styled(Form)`\n    display: flex;\n    flex-direction: column;\n    gap: 20px;\n    width: 350px;\n`\n\nexport const InputCart = styled(Field)`\n    padding: 20px;\n    font-size: 16px;\n    font-weight: 600;\n    border: 1px solid orange;\n`\n\nexport const BtnCart = styled.button`\n    background-color: #2196f3;\n    border: none;\n    padding: 20px;\n    font-size: 16px;\n    font-weight: 700;\n    color: white;\n    border-radius: 20px;\n    cursor: pointer;\n`\n\nexport const ErrorText = styled(ErrorMessage)`\n    color: red;\n    font-size: 16px;\n`","import { Formik} from 'formik';\nimport { FormCart, InputCart, BtnCart, ErrorText } from './CartForm.styled';\nimport * as yup from 'yup';\n\nconst validateSchema = yup.object({\n    name: yup.string('Type a name').required('Name is require'),\n    phone: yup.number('Type a number').min(8, 'Number must be min 8 length').required('Phone is require'),\n    address: yup.string(\"Type your address\").required('Address is require')\n})\n\n\nconst CartForm = () => {\n  const initialValue = {\n    name: '',\n    phone: '',\n    address: '',\n  };\n  const onSubmit = (value, action) => {\n    console.log(value);\n    console.log(action);\n  };\n\n  return (\n    <>\n      <Formik initialValues={initialValue} validationSchema={validateSchema} onSubmit={onSubmit}>\n        <FormCart>\n          <InputCart type=\"text\" name=\"name\" placeholder=\"Type your name\" />\n          <ErrorText component='p' name=\"name\" />\n\n          <InputCart type=\"text\" name=\"phone\" placeholder=\"Type your phone\" />\n\n          <ErrorText component='p' name=\"phone\" />\n          <InputCart type=\"text\" name=\"address\" placeholder=\"Type your address\" />\n\n          <ErrorText component='p' name=\"address\" />\n\n          <BtnCart type=\"submit\">Order now</BtnCart>\n        </FormCart>\n      </Formik>\n    </>\n  );\n};\n\n\nexport default CartForm;","export const selectOrders = state => state.cart.cartItem;\n","import styled from \"@emotion/styled\";\n\nexport const CartContainer = styled.div`\n    display: flex;\n    gap: 40px;\n    margin: 0 auto;\n    margin-top: 30px;\n\n`\n\nexport const CartOrdersList = styled.ul`\n    display: flex;\n    flex-direction: column;\n    gap: 20px;\n\n`\n\nexport const CartOrderItem = styled.li`\n    display: flex;\n    gap: 20px;\n    max-width: 150px;\n`\n\nexport const OrderDesc = styled.p`\n    margin-top: auto;\n`\n\nexport const CartOrderDesc = styled.div`\n    display: flex;\n    gap: 10px;\n    flex-direction: column;\n    width: 200px;\n`\n\nexport const CartOrderDescContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    gap: 40px;\n`","import CartForm from 'components/CartForm';\nimport { useSelector } from 'react-redux';\nimport { selectOrders } from 'redux/orders/selectors';\nimport { CartContainer, CartOrdersList, CartOrderItem, CartOrderDesc, CartOrderDescContainer, OrderDesc} from './Cart.styled';\n\n\nconst Cart = () => {\n  const orders = useSelector(selectOrders);\n  console.log(orders);\n\n  return (\n   <CartContainer>\n     <CartForm/>\n    <CartOrdersList>\n      {orders.map(({ id, img, title, price, desc }) => {\n        return (\n          <CartOrderItem key={id}>\n            <img src={img} alt={title} />\n            <CartOrderDescContainer>\n            <CartOrderDesc>\n            <h3>{title}</h3>\n            <p>{desc}</p>\n            </CartOrderDesc>\n            <OrderDesc><strong>Price:</strong> {price}</OrderDesc>\n            </CartOrderDescContainer>\n        \n          </CartOrderItem>\n        );\n      })}\n    </CartOrdersList>\n   </CartContainer>\n  );\n};\n\nexport default Cart;\n","import Cart from \"../components/Cart\";\n\nconst CartPage = () => {\n  return <Cart />;\n};\n\nexport default CartPage;\n"],"names":["FormCart","styled","Form","InputCart","Field","BtnCart","ErrorText","ErrorMessage","validateSchema","yup","name","required","phone","min","address","initialValues","validationSchema","onSubmit","value","action","console","log","type","placeholder","component","selectOrders","state","cart","cartItem","CartContainer","CartOrdersList","CartOrderItem","OrderDesc","CartOrderDesc","CartOrderDescContainer","orders","useSelector","map","id","img","title","price","desc","src","alt"],"sourceRoot":""}