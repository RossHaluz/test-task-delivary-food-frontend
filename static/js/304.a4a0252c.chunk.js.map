{"version":3,"file":"static/js/304.a4a0252c.chunk.js","mappings":"uMAEaA,EAAWC,EAAAA,EAAAA,IAAH,uOAaRC,EAAQD,EAAAA,EAAAA,IAAH,sE,iDC4BlB,EApC0B,SAAC,GAAmB,IAAjBE,EAAgB,EAAhBA,UACrBC,GAAWC,EAAAA,EAAAA,MACjB,GAAwBC,EAAAA,EAAAA,IAAYC,EAAAA,IAE9BC,EAAgB,CACpBC,KAHF,EAAQA,KAINC,MAJF,EAAcA,OAad,OACE,SAACV,EAAD,CAAUW,QAPa,SAAAC,GACnBA,EAAEC,gBAAkBD,EAAEE,QACxBX,GAAU,EAEb,EAGC,UACE,SAACD,EAAD,WACE,SAAC,KAAD,CACEM,cAAeA,EACfO,SAAU,SAAAC,GACRZ,GAASa,EAAAA,EAAAA,IAASD,IAClBb,GAAU,EACX,EALH,UAOE,UAAC,KAAD,YACE,SAAC,KAAD,CAAOe,KAAK,OAAOT,KAAK,UACxB,SAAC,KAAD,CAAOS,KAAK,QAAQT,KAAK,WACzB,mBAAQS,KAAK,SAAb,SAAsB,iBAMjC,ECtCYC,EAAmBlB,EAAAA,EAAAA,IAAH,sEAKhBmB,GAAenB,EAAAA,EAAAA,GAAOoB,EAAAA,GAAPpB,CAAH,yHAQZqB,EAAgBrB,EAAAA,EAAAA,MAAH,mFAMbsB,EAAgBtB,EAAAA,EAAAA,GAAH,wFC4B1B,EAtCiB,WACf,IAAMuB,GAAOlB,EAAAA,EAAAA,IAAYC,EAAAA,IACzB,GAA4BkB,EAAAA,EAAAA,WAAS,GAArC,eAAOC,EAAP,KAAevB,EAAf,KAMMK,EAAgB,CACpBC,KAAMe,EAAKf,MAAQ,GACnBC,MAAOc,EAAKd,OAAS,IAGvB,OACE,iCACE,SAACa,EAAD,UAAe,4BACf,UAACJ,EAAD,YACE,SAAC,KAAD,CAAQX,cAAeA,EAAvB,UACE,UAACY,EAAD,YACE,UAACE,EAAD,WAAe,QAEb,SAAC,KAAD,CAAOJ,KAAK,OAAOT,KAAK,OAAOkB,UAAQ,QAEzC,UAACL,EAAD,WAAe,SAEb,SAAC,KAAD,CAAOJ,KAAK,QAAQT,KAAK,QAAQkB,UAAQ,QAE3C,mBAAQT,KAAK,SAASP,QAvBX,WACnBR,GAAU,SAAAyB,GAAI,OAAKA,CAAL,GACf,EAqBS,SAA6C,sBAKhDF,IAAU,SAAC,EAAD,CAAmBvB,UAAWA,SAIhD,ECzCD,EAJiB,WACf,OAAO,SAAC,EAAD,GACR,ECCD,EAJiB,WACf,OAAO,SAAC,EAAD,GACR,C","sources":["components/ModalEditUserInfo/ModalEditUserInfo.styled.jsx","components/ModalEditUserInfo/ModalEditUserInfo.jsx","components/UserInfo/UserInfo.styled.jsx","components/UserInfo/UserInfo.jsx","components/UserData/UserData.jsx","pages/UserPage.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Backdrop = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0.3);\n  z-index: 1200;\n`;\n\nexport const Modal = styled.div`\n  padding: 20px;\n  background-color: white;\n`;\n","import React from 'react';\nimport { Backdrop, Modal } from './ModalEditUserInfo.styled';\nimport { Field, Form, Formik } from 'formik';\nimport { selectUser } from 'redux/auth/selectors';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { editUser } from 'redux/auth/operetions';\n\nconst ModalEditUserInfo = ({ setIsOpen }) => {\n  const dispatch = useDispatch();\n  const { name, email } = useSelector(selectUser);\n\n  const initialValues = {\n    name: name,\n    email: email,\n  };\n\n  const onCloseEditModal = e => {\n    if (e.currentTarget === e.target) {\n      setIsOpen(false);\n    }\n  };\n\n  return (\n    <Backdrop onClick={onCloseEditModal}>\n      <Modal>\n        <Formik\n          initialValues={initialValues}\n          onSubmit={value => {\n            dispatch(editUser(value));\n            setIsOpen(false);\n          }}\n        >\n          <Form>\n            <Field type=\"text\" name=\"name\" />\n            <Field type=\"email\" name=\"email\" />\n            <button type=\"submit\">Edit</button>\n          </Form>\n        </Formik>\n      </Modal>\n    </Backdrop>\n  );\n};\n\nexport default ModalEditUserInfo;\n","import styled from '@emotion/styled';\nimport { Form } from 'formik';\n\nexport const UserInfoWrapperr = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nexport const UserInfoForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  width: 350px;\n  margin-top: 30px;\n`;\n\nexport const UserInfoLable = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n`;\n\nexport const UserInfoTitle = styled.h2`\n  text-align: center;\n  margin-top: 30px;\n  font-size: 27px;\n`;\n","import ModalEditUserInfo from 'components/ModalEditUserInfo';\nimport { Formik, Field } from 'formik';\nimport { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { selectUser } from 'redux/auth/selectors';\nimport {\n  UserInfoForm,\n  UserInfoLable,\n  UserInfoWrapperr,\n  UserInfoTitle,\n} from './UserInfo.styled';\n\nconst UserInfo = () => {\n  const user = useSelector(selectUser);\n  const [isOpen, setIsOpen] = useState(false);\n\n  const handleIsOpen = () => {\n    setIsOpen(prev => !prev);\n  };\n\n  const initialValues = {\n    name: user.name || '',\n    email: user.email || '',\n  };\n\n  return (\n    <>\n      <UserInfoTitle>Information about user</UserInfoTitle>\n      <UserInfoWrapperr>\n        <Formik initialValues={initialValues}>\n          <UserInfoForm>\n            <UserInfoLable>\n              Name\n              <Field type=\"text\" name=\"name\" disabled />\n            </UserInfoLable>\n            <UserInfoLable>\n              Email\n              <Field type=\"email\" name=\"email\" disabled />\n            </UserInfoLable>\n            <button type=\"button\" onClick={handleIsOpen}>\n              Edit profile\n            </button>\n          </UserInfoForm>\n        </Formik>\n        {isOpen && <ModalEditUserInfo setIsOpen={setIsOpen} />}\n      </UserInfoWrapperr>\n    </>\n  );\n};\n\nexport default UserInfo;\n","import UserInfo from 'components/UserInfo';\nimport React from 'react';\n\nconst UserData = () => {\n  return <UserInfo />;\n};\n\nexport default UserData;\n","import UserData from 'components/UserData';\n\nconst UserPage = () => {\n  return <UserData />;\n};\n\nexport default UserPage;\n"],"names":["Backdrop","styled","Modal","setIsOpen","dispatch","useDispatch","useSelector","selectUser","initialValues","name","email","onClick","e","currentTarget","target","onSubmit","value","editUser","type","UserInfoWrapperr","UserInfoForm","Form","UserInfoLable","UserInfoTitle","user","useState","isOpen","disabled","prev"],"sourceRoot":""}