{"version":3,"file":"static/js/517.82e8c0f9.chunk.js","mappings":"yMAEaA,EAAWC,EAAAA,EAAAA,GAAH,6PAWRC,EAAeD,EAAAA,EAAAA,EAAH,6CAIZE,EAAcF,EAAAA,EAAAA,OAAH,yO,mBCQxB,EArBoB,SAAC,GAAqC,IAAnCG,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,IAAKC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,GACxCC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,UAACV,EAAD,YACE,gBAAKW,IAAKN,EAAKO,IAAKR,EAAOS,MAAM,MAAMC,OAAO,WAC9C,4BACE,wBAAKV,KACL,SAACF,EAAD,UAAeI,QAEjB,uBAAIC,KACJ,SAACJ,EAAD,CACEY,KAAK,SACLC,QAAS,kBAAMP,GAASQ,EAAAA,EAAAA,GAAc,CAAEb,MAAAA,EAAOC,IAAAA,EAAKC,KAAAA,EAAMC,MAAAA,EAAOC,GAAAA,IAAxD,EAFX,oDAQL,ECrBYU,EAAoBjB,EAAAA,EAAAA,IAAH,0CAIjBkB,EAAYlB,EAAAA,EAAAA,GAAH,iG,UCJTmB,EAAYnB,EAAAA,EAAAA,OAAH,oNAYToB,EAAmBpB,EAAAA,EAAAA,IAAH,6NC+B7B,EA1Ce,SAAC,GAA4B,IAA1BqB,EAAyB,EAAzBA,mBAChB,GAAqBC,EAAAA,EAAAA,UAAS,CAC5B,CACEf,GAAI,EACJgB,KAAM,UAER,CACEhB,GAAI,EACJgB,KAAM,eAER,CACEhB,GAAI,EACJgB,KAAM,iBAER,CACEhB,GAAI,EACJgB,KAAM,gBAfHC,GAAP,eAuBA,OACE,UAACJ,EAAD,YACE,kCACCI,EAAWC,KAAI,SAAAC,GACd,OACE,SAACP,EAAD,CAEEL,KAAK,SACLC,QAAS,kBAZCY,EAYiBD,EAAUH,UAX7CF,EAAmBM,GADD,IAAAA,CAYD,EAHX,SAKGD,EAAUH,MAJNG,EAAUnB,GAOpB,MAGN,EC3CYqB,EAAc,SAAAC,GAAK,OAAIA,EAAMC,KAAKC,KAAf,ECuChC,EAhCiB,WACf,IAAMC,GAAQC,EAAAA,EAAAA,IAAYL,GAC1B,GAA8BN,EAAAA,EAAAA,UAAS,cAAvC,eAAOY,EAAP,KAAgBC,EAAhB,KAMA,OACE,UAAClB,EAAD,YACE,SAAC,EAAD,CAAQI,mBANe,SAAAM,GACzBQ,EAAWR,EACZ,KAKG,SAACT,EAAD,UACGc,GACCA,EACGI,QAAO,SAAAC,GAAI,OAAIA,EAAKd,OAASW,CAAlB,IACXT,KAAI,YAAuC,IAApCtB,EAAmC,EAAnCA,MAAOC,EAA4B,EAA5BA,IAAKC,EAAuB,EAAvBA,KAAMC,EAAiB,EAAjBA,MAAOgC,EAAU,EAAVA,IAC/B,OACE,SAAC,EAAD,CAEE/B,GAAI+B,EACJnC,MAAOA,EACPC,IAAKA,EACLC,KAAMA,EACNC,MAAOA,GALFgC,EAQV,QAIZ,EC/BD,EAJqB,WACnB,OAAO,SAAC,EAAD,GACR,C","sources":["components/ProductItem/ProductItem.styled.jsx","components/ProductItem/ProductItem.jsx","components/Products/Products.styled.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","redux/foods/selectors.js","components/Products/Products.jsx","pages/ProductsPage.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const FoodItem = styled.li`\n  flex-basis: calc((100% - 30px * (1 - 1)) / 1);\n\n  @media (min-width: 768px) {\n    flex-basis: calc((100% - 30px * (2 - 1)) / 2);\n  }\n  @media (min-width: 1280px) {\n    flex-basis: calc((100% - 30px * (3 - 1)) / 3);\n  }\n`;\n\nexport const FoodItemDesc = styled.p`\n  max-width: 440px;\n`;\n\nexport const FoodItemBtn = styled.button`\n  background: none;\n  border: none;\n  background-color: #2196f3;\n  padding: 10px;\n  border-radius: 10px;\n  margin-top: 10px;\n  color: white;\n  font-size: 16px;\n  font-weight: 600;\n  cursor: pointer;\n`;\n","import { useDispatch } from 'react-redux';\nimport { FoodItem, FoodItemDesc, FoodItemBtn } from './ProductItem.styled';\nimport { addItemToCart } from 'redux/orders/slice';\n\nconst ProductItem = ({ title, img, desc, price, id }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <FoodItem>\n      <img src={img} alt={title} width=\"426\" height=\"294px\" />\n      <div>\n        <h2>{title}</h2>\n        <FoodItemDesc>{desc}</FoodItemDesc>\n      </div>\n      <p>{price}</p>\n      <FoodItemBtn\n        type=\"button\"\n        onClick={() => dispatch(addItemToCart({ title, img, desc, price, id }))}\n      >\n        Купити\n      </FoodItemBtn>\n    </FoodItem>\n  );\n};\n\nexport default ProductItem;\n","import styled from \"@emotion/styled\";\n\nexport const FoodListContainer = styled.div`\n  display: flex;\n`;\n\nexport const FoodsList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 30px;\n  margin-top: 30px;\n`;\n","import styled from \"@emotion/styled\";\n\nexport const FilterBtn = styled.button`\n  background: none;\n  border: none;\n  padding: 20px;\n  font-size: 16px;\n  font-weight: 500;\n  color: white;\n  background-color: #2196f3;\n  cursor: pointer;\n  border-radius: 20px;\n`;\n\nexport const FilterBtnWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  padding: 40px;\n  border: 1px solid #030303;\n  border-radius: 10px;\n  max-height: 400px;\n  margin-top: 30px;\n  margin-right: 30px;\n`;\n","import { useState } from 'react';\nimport { FilterBtnWrapper, FilterBtn } from './Filter.styled';\n\nconst Filter = ({ setCurrentCategory }) => {\n  const [categories] = useState([\n    {\n      id: 1,\n      name: 'Kegler',\n    },\n    {\n      id: 2,\n      name: 'Green House',\n    },\n    {\n      id: 3,\n      name: 'Dioscuri Mini',\n    },\n    {\n      id: 4,\n      name: 'Cook drive',\n    },\n  ]);\n\n  const onClickShop = value => {\n    setCurrentCategory(value);\n  };\n\n  return (\n    <FilterBtnWrapper>\n      <h3>Shops</h3>\n      {categories.map(categorie => {\n        return (\n          <FilterBtn\n            key={categorie.id}\n            type=\"button\"\n            onClick={() => onClickShop(categorie.name)}\n          >\n            {categorie.name}\n          </FilterBtn>\n        );\n      })}\n    </FilterBtnWrapper>\n  );\n};\n\nexport default Filter;\n","export const selectFoods = state => state.food.foods;\n","import ProductItem from '../ProductItem';\nimport { FoodsList, FoodListContainer } from './Products.styled';\nimport Filter from '../Filter/Filter';\nimport { useSelector } from 'react-redux';\nimport { selectFoods } from 'redux/foods/selectors';\nimport { useState } from 'react';\n\nconst Products = () => {\n  const items = useSelector(selectFoods);\n  const [current, setCurrent] = useState('Cook drive');\n\n  const setCurrentCategory = value => {\n    setCurrent(value);\n  };\n\n  return (\n    <FoodListContainer>\n      <Filter setCurrentCategory={setCurrentCategory} />\n      <FoodsList>\n        {items &&\n          items\n            .filter(item => item.name === current)\n            .map(({ title, img, desc, price, _id }) => {\n              return (\n                <ProductItem\n                  key={_id}\n                  id={_id}\n                  title={title}\n                  img={img}\n                  desc={desc}\n                  price={price}\n                />\n              );\n            })}\n      </FoodsList>\n    </FoodListContainer>\n  );\n};\n\nexport default Products;\n","import Products from \"../components/Products\";\n\nconst ProductsPage = () => {\n  return <Products />;\n};\n\nexport default ProductsPage;\n"],"names":["FoodItem","styled","FoodItemDesc","FoodItemBtn","title","img","desc","price","id","dispatch","useDispatch","src","alt","width","height","type","onClick","addItemToCart","FoodListContainer","FoodsList","FilterBtn","FilterBtnWrapper","setCurrentCategory","useState","name","categories","map","categorie","value","selectFoods","state","food","foods","items","useSelector","current","setCurrent","filter","item","_id"],"sourceRoot":""}