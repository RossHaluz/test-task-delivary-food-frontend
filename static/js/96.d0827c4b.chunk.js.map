{"version":3,"file":"static/js/96.d0827c4b.chunk.js","mappings":"2OAEaA,E,QAAYC,EAAAA,KAAH,wK,SCOlBC,EAASC,EAAAA,GAAW,CACtBC,MAAOD,EAAAA,GACG,oBACPC,MAAM,uBACNC,SAAS,qBACZC,SAAUH,EAAAA,GACA,uBACPI,IAAI,EAAG,qDACPF,SAAS,0BAuDd,EApDc,WACZ,IAAMG,GAAWC,EAAAA,EAAAA,MACXC,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACbR,MAAO,GACPE,SAAU,IAEZO,iBAAkBX,EAClBY,SAAU,SAACC,EAAD,GAA4B,IAAjBC,EAAgB,EAAhBA,UACXZ,EAAoBW,EAApBX,MAAOE,EAAaS,EAAbT,SACfE,GAASS,EAAAA,EAAAA,IAAM,CAAEb,MAAAA,EAAOE,SAAAA,KACxBU,GACD,IAGH,OACE,UAAChB,EAAD,CAAWc,SAAUJ,EAAOQ,aAA5B,WACE,SAACC,EAAA,EAAD,CACEC,GAAG,QACHC,KAAK,QACLC,MAAM,SACNC,QAAQ,WACRC,KAAK,QACLC,MAAOf,EAAOK,OAAOX,MACrBsB,SAAUhB,EAAOiB,aACjBC,MAAOlB,EAAOmB,QAAQzB,OAAS0B,QAAQpB,EAAOqB,OAAO3B,OACrD4B,WAAYtB,EAAOmB,QAAQzB,OAASM,EAAOqB,OAAO3B,SAGpD,SAACe,EAAA,EAAD,CACEC,GAAG,WACHC,KAAK,WACLC,MAAM,WACNC,QAAQ,WACRC,KAAK,WACLC,MAAOf,EAAOK,OAAOT,SACrBoB,SAAUhB,EAAOiB,aACjBC,MAAOlB,EAAOmB,QAAQvB,UAAYwB,QAAQpB,EAAOqB,OAAOzB,UACxD0B,WAAYtB,EAAOmB,QAAQzB,OAASM,EAAOqB,OAAO3B,SAGpD,SAAC6B,EAAA,EAAD,CAAQV,QAAQ,YAAYF,KAAK,SAAjC,SAA0C,YAI1C,UAACa,EAAA,EAAD,CAAYX,QAAQ,IAApB,UAAwB,iCACO,SAAC,KAAD,CAAMY,GAAG,YAAT,SAAqB,kBAIzD,EChED,EAJkB,WAChB,OAAO,SAAC,EAAD,GACR,C","sources":["components/Login/Login.styled.jsx","components/Login/Login.jsx","pages/LoginPage.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const LoginForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  justify-content: center;\n  width: 350px;\n  margin: 0 auto;\n  margin-top: 30px;\n`;\n","import { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport { Link } from 'react-router-dom';\nimport Button from '@mui/material/Button';\nimport { TextField, Typography } from '@mui/material';\nimport { useDispatch } from 'react-redux';\nimport { login } from 'redux/auth/operetions';\nimport { LoginForm } from './Login.styled';\n\nlet schema = yup.object({\n  email: yup\n    .string('Enter your email')\n    .email('Enter a valid email')\n    .required('Email is required'),\n  password: yup\n    .string('Enter your password')\n    .min(8, 'Password should be of minimum 8 characters length')\n    .required('Password is required'),\n});\n\nconst Login = () => {\n  const dispatch = useDispatch();\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: '',\n    },\n    validationSchema: schema,\n    onSubmit: (values, { resetForm }) => {\n      const { email, password } = values;\n      dispatch(login({ email, password }));\n      resetForm();\n    },\n  });\n\n  return (\n    <LoginForm onSubmit={formik.handleSubmit}>\n      <TextField\n        id=\"email\"\n        type=\"email\"\n        label=\"E-mail\"\n        variant=\"outlined\"\n        name=\"email\"\n        value={formik.values.email}\n        onChange={formik.handleChange}\n        error={formik.touched.email && Boolean(formik.errors.email)}\n        helperText={formik.touched.email && formik.errors.email}\n      />\n\n      <TextField\n        id=\"password\"\n        type=\"password\"\n        label=\"Password\"\n        variant=\"outlined\"\n        name=\"password\"\n        value={formik.values.password}\n        onChange={formik.handleChange}\n        error={formik.touched.password && Boolean(formik.errors.password)}\n        helperText={formik.touched.email && formik.errors.email}\n      />\n\n      <Button variant=\"contained\" type=\"submit\">\n        Log in\n      </Button>\n\n      <Typography variant=\"p\">\n        If you don't have an account <Link to=\"/register\">Register</Link>\n      </Typography>\n    </LoginForm>\n  );\n};\n\nexport default Login;\n","import Login from 'components/Login';\n\nconst LoginPage = () => {\n  return <Login />;\n};\n\nexport default LoginPage;\n"],"names":["LoginForm","styled","schema","yup","email","required","password","min","dispatch","useDispatch","formik","useFormik","initialValues","validationSchema","onSubmit","values","resetForm","login","handleSubmit","TextField","id","type","label","variant","name","value","onChange","handleChange","error","touched","Boolean","errors","helperText","Button","Typography","to"],"sourceRoot":""}