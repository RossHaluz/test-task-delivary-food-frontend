{"version":3,"file":"static/js/879.2faaab19.chunk.js","mappings":"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","sources":["components/ProductItem/ProductItem.styled.jsx","components/ProductItem/ProductItem.jsx","components/Products/Products.styled.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/Products/Products.jsx","pages/ProductsPage.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const FoodItem = styled.li`\n  flex-basis: calc((100% - 30px * (1 - 1)) / 1);\n\n  @media (min-width: 768px) {\n    flex-basis: calc((100% - 30px * (2 - 1)) / 2);\n  }\n  @media (min-width: 1280px) {\n    flex-basis: calc((100% - 30px * (3 - 1)) / 3);\n  }\n`;\n\nexport const FoodItemDesc = styled.p`\n  max-width: 440px;\n`;\n\nexport const FoodItemBtn = styled.button`\n  background: none;\n  border: none;\n  background-color: #2196f3;\n  padding: 10px;\n  border-radius: 10px;\n  margin-top: 10px;\n  color: white;\n  font-size: 16px;\n  font-weight: 600;\n  cursor: pointer;\n`;\n","import { useDispatch } from 'react-redux';\nimport { FoodItem, FoodItemDesc, FoodItemBtn } from './ProductItem.styled';\nimport { addItemToCart } from 'redux/orders/slice';\nimport { toast } from 'react-hot-toast';\nimport { NavLink, useLocation } from 'react-router-dom';\n\nconst ProductItem = ({ title, img, desc, price, id, count }) => {\n  const dispatch = useDispatch();\n  const location = useLocation();\n\n  const handleAddItemToCart = () => {\n    dispatch(addItemToCart({ title, img, desc, price, id, count }));\n    toast.success('Success add');\n  };\n\n  return (\n    <>\n      <FoodItem>\n        <NavLink to={`/${id}`} state={{ from: location }}>\n          <img src={img} alt={title} width=\"426\" height=\"294px\" />\n          <div>\n            <h2>{title}</h2>\n            <FoodItemDesc>{desc}</FoodItemDesc>\n          </div>\n        </NavLink>\n        <p>{price} UAH</p>\n        <FoodItemBtn type=\"button\" onClick={handleAddItemToCart}>\n          Buy\n        </FoodItemBtn>\n      </FoodItem>\n    </>\n  );\n};\n\nexport default ProductItem;\n","import styled from \"@emotion/styled\";\n\nexport const FoodListContainer = styled.div`\n  display: flex;\n`;\n\nexport const FoodsList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 30px;\n  margin-top: 30px;\n`;\n","import styled from '@emotion/styled';\n\nexport const FilterBtn = styled.button`\n  background: none;\n  padding: 20px;\n  font-size: 16px;\n  font-weight: 500;\n  color: #030303;\n  border: 1px solid #2196f3;\n  cursor: pointer;\n  border-radius: 20px;\n`;\n\nexport const FilterBtnWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  padding: 40px;\n  border: 1px solid #030303;\n  border-radius: 10px;\n  max-height: 400px;\n  margin-top: 30px;\n  margin-right: 30px;\n`;\n","import { useState } from 'react';\nimport { FilterBtnWrapper, FilterBtn } from './Filter.styled';\nimport { useSearchParams } from 'react-router-dom';\nimport { getFoodsCategory } from 'redux/foods/operetions';\nimport { useDispatch } from 'react-redux';\nimport { setShopName } from 'redux/foods/slice';\n\nconst Filter = ({ current }) => {\n  const [query, setQuery] = useSearchParams();\n  const dispatch = useDispatch();\n  const category = query.get('shop');\n  const [categories] = useState([\n    {\n      id: 1,\n      name: 'Kegler',\n    },\n    {\n      id: 2,\n      name: 'Green House',\n    },\n    {\n      id: 3,\n      name: 'Dioscuri Mini',\n    },\n    {\n      id: 4,\n      name: 'Cook drive',\n    },\n  ]);\n\n  const onClickShop = value => {\n    setQuery({ shop: value });\n    dispatch(getFoodsCategory(category));\n    dispatch(setShopName(value))\n  };\n\n  return (\n    <FilterBtnWrapper>\n      <h3>Shops</h3>\n      {categories.map(({ id, name }) => {\n        return (\n          <FilterBtn\n            key={id}\n            type=\"button\"\n            style={{\n              backgroundColor: category === name ? '#2196f3' : 'white',\n              color: category === name ? 'white' : '#030303',\n              fontWeight: category === name ? '600' : '400',\n            }}\n            onClick={() => onClickShop(name)}\n          >\n            {name}\n          </FilterBtn>\n        );\n      })}\n    </FilterBtnWrapper>\n  );\n};\n\nexport default Filter;\n","import ProductItem from '../ProductItem';\nimport { FoodsList, FoodListContainer } from './Products.styled';\nimport Filter from '../Filter/Filter';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { isLoading, selectCurrentPage, selectCurrentPageCategory, selectCurrentShop, selectFoods, selectPageQtyCategory, selectTotalPage } from 'redux/foods/selectors';\nimport { Oval } from 'react-loader-spinner';\nimport { Pagination, Stack } from '@mui/material';\nimport { changeCurrentPage, changeCurrentPageCategory } from 'redux/foods/slice';\nimport { getFoodsCategory } from 'redux/foods/operetions';\nimport { useEffect } from 'react';\n\nconst Products = () => {\n  const items = useSelector(selectFoods).foods;\n  const isLoadingPage = useSelector(isLoading);\n  const page = useSelector(selectCurrentPage);\n  const pageQty = useSelector(selectTotalPage);\n  const currentShop = useSelector(selectCurrentShop);\n  const pageCategory = useSelector(selectCurrentPageCategory);\n  const pageQtyCategory = useSelector(selectPageQtyCategory);\n  const dispatch = useDispatch();\nconsole.log(items);\n\n  useEffect(() => {\n    if(currentShop === ''){\n      return;\n    }\n    \n    dispatch(getFoodsCategory({ pageCategory, currentShop}))\n  }, [dispatch, pageCategory, currentShop])\n\n\n  return (\n   <> <FoodListContainer>\n   <Filter />\n   <FoodsList>\n     {isLoadingPage && !items ? (\n       <Oval\n         height={80}\n         width={80}\n         color=\"#2196f3\"\n         wrapperStyle={{}}\n         wrapperClass=\"\"\n         visible={true}\n         ariaLabel=\"oval-loading\"\n         secondaryColor=\"#2196f3\"\n         strokeWidth={2}\n         strokeWidthSecondary={2}\n       />\n     ) : (\n       items.map(({ title, img, desc, price, _id, count }) => {\n         return (\n           <ProductItem\n             key={_id}\n             id={_id}\n             title={title}\n             img={img}\n             desc={desc}\n             price={price}\n             count={count}\n           />\n         );\n       })\n     )}\n   </FoodsList>\n </FoodListContainer>\n <Stack m='0 auto' mt={5} mb={5}>\n  {!!pageQty && currentShop === '' ? <Pagination count={pageQty} page={page} onChange={(_, num) => dispatch(changeCurrentPage(num))} showFirstButton showLastButton/> : <Pagination count={pageQtyCategory} page={pageCategory} onChange={(_, num) => dispatch(changeCurrentPageCategory(num))} showFirstButton showLastButton/>}\n </Stack>\n </>\n  );\n};\n\nexport default Products;\n","import Products from \"../components/Products\";\n\nconst ProductsPage = () => {\n  return <Products />;\n};\n\nexport default ProductsPage;\n"],"names":["FoodItem","styled","FoodItemDesc","FoodItemBtn","title","img","desc","price","id","count","dispatch","useDispatch","location","useLocation","to","state","from","src","alt","width","height","type","onClick","addItemToCart","toast","FoodListContainer","FoodsList","FilterBtn","FilterBtnWrapper","current","useSearchParams","query","setQuery","category","get","useState","name","categories","map","style","backgroundColor","color","fontWeight","shop","value","getFoodsCategory","setShopName","items","useSelector","selectFoods","foods","isLoadingPage","isLoading","page","selectCurrentPage","pageQty","selectTotalPage","currentShop","selectCurrentShop","pageCategory","selectCurrentPageCategory","pageQtyCategory","selectPageQtyCategory","console","log","useEffect","wrapperStyle","wrapperClass","visible","ariaLabel","secondaryColor","strokeWidth","strokeWidthSecondary","_id","Stack","m","mt","mb","Pagination","onChange","_","num","changeCurrentPage","showFirstButton","showLastButton","changeCurrentPageCategory"],"sourceRoot":""}