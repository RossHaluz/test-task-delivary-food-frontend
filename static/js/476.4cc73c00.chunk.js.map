{"version":3,"file":"static/js/476.4cc73c00.chunk.js","mappings":"+OAEaA,E,QAAeC,EAAAA,KAAH,wK,SCOrBC,EAASC,EAAAA,GAAW,CACtBC,KAAMD,EAAAA,GAAW,mBAAmBE,SAAS,oBAC7CC,MAAOH,EAAAA,GACG,oBACPG,MAAM,uBACND,SAAS,qBACZE,SAAUJ,EAAAA,GACA,uBACPK,IAAI,EAAG,qDACPH,SAAS,0BAkEd,EA/DiB,WACf,IAAMI,GAAWC,EAAAA,EAAAA,MACXC,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACbT,KAAM,GACNE,MAAO,GACPC,SAAU,IAEZO,iBAAkBZ,EAClBa,SAAU,SAACC,EAAD,GAA4B,IAAjBC,EAAgB,EAAhBA,UACnBR,GAASS,EAAAA,EAAAA,IAASF,IAClBC,GACD,IAGH,OACE,UAACjB,EAAD,CAAce,SAAUJ,EAAOQ,aAA/B,WACE,SAACC,EAAA,EAAD,CACEC,GAAG,OACHC,KAAK,OACLC,MAAM,OACNC,QAAQ,WACRpB,KAAK,OACLqB,MAAOd,EAAOK,OAAOZ,KACrBsB,SAAUf,EAAOgB,aACjBC,MAAOjB,EAAOkB,QAAQzB,MAAQ0B,QAAQnB,EAAOoB,OAAO3B,SAGtD,SAACgB,EAAA,EAAD,CACEC,GAAG,QACHC,KAAK,QACLC,MAAM,SACNC,QAAQ,WACRpB,KAAK,QACLqB,MAAOd,EAAOK,OAAOV,MACrBoB,SAAUf,EAAOgB,aACjBC,MAAOjB,EAAOkB,QAAQvB,OAASwB,QAAQnB,EAAOoB,OAAOzB,OACrD0B,WAAYrB,EAAOkB,QAAQvB,OAASK,EAAOoB,OAAOzB,SAGpD,SAACc,EAAA,EAAD,CACEC,GAAG,WACHC,KAAK,WACLC,MAAM,WACNC,QAAQ,WACRpB,KAAK,WACLqB,MAAOd,EAAOK,OAAOT,SACrBmB,SAAUf,EAAOgB,aACjBC,MAAOjB,EAAOkB,QAAQtB,UAAYuB,QAAQnB,EAAOoB,OAAOxB,UACxDyB,WAAYrB,EAAOkB,QAAQvB,OAASK,EAAOoB,OAAOzB,SAGpD,SAAC2B,EAAA,EAAD,CAAQT,QAAQ,YAAYF,KAAK,SAAjC,SAA0C,eAI1C,UAACY,EAAA,EAAD,CAAYV,QAAQ,IAApB,UAAwB,mCACS,SAAC,KAAD,CAAMW,GAAG,SAAT,SAAkB,gBAIxD,EC5ED,EAJqB,WACnB,OAAO,SAAC,EAAD,GACR,C","sources":["components/Register/Register.styled.jsx","components/Register/Register.jsx","pages/RegisterPage.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const RegisterForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  justify-content: center;\n  width: 350px;\n  margin: 0 auto;\n  margin-top: 30px;\n`;\n","import { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport { Link } from 'react-router-dom';\nimport Button from '@mui/material/Button';\nimport { TextField, Typography } from '@mui/material';\nimport { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/operetions';\nimport { RegisterForm } from './Register.styled';\n\nlet schema = yup.object({\n  name: yup.string('Enter your name').required('Name is required'),\n  email: yup\n    .string('Enter your email')\n    .email('Enter a valid email')\n    .required('Email is required'),\n  password: yup\n    .string('Enter your password')\n    .min(8, 'Password should be of minimum 8 characters length')\n    .required('Password is required'),\n});\n\nconst Register = () => {\n  const dispatch = useDispatch();\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      email: '',\n      password: '',\n    },\n    validationSchema: schema,\n    onSubmit: (values, { resetForm }) => {\n      dispatch(register(values));\n      resetForm();\n    },\n  });\n\n  return (\n    <RegisterForm onSubmit={formik.handleSubmit}>\n      <TextField\n        id=\"name\"\n        type=\"text\"\n        label=\"Name\"\n        variant=\"outlined\"\n        name=\"name\"\n        value={formik.values.name}\n        onChange={formik.handleChange}\n        error={formik.touched.name && Boolean(formik.errors.name)}\n      />\n\n      <TextField\n        id=\"email\"\n        type=\"email\"\n        label=\"E-mail\"\n        variant=\"outlined\"\n        name=\"email\"\n        value={formik.values.email}\n        onChange={formik.handleChange}\n        error={formik.touched.email && Boolean(formik.errors.email)}\n        helperText={formik.touched.email && formik.errors.email}\n      />\n\n      <TextField\n        id=\"password\"\n        type=\"password\"\n        label=\"Password\"\n        variant=\"outlined\"\n        name=\"password\"\n        value={formik.values.password}\n        onChange={formik.handleChange}\n        error={formik.touched.password && Boolean(formik.errors.password)}\n        helperText={formik.touched.email && formik.errors.email}\n      />\n\n      <Button variant=\"contained\" type=\"submit\">\n        Regisater\n      </Button>\n\n      <Typography variant=\"p\">\n        If you already have an account <Link to=\"/login\">Log in</Link>\n      </Typography>\n    </RegisterForm>\n  );\n};\n\nexport default Register;\n","import Register from 'components/Register';\n\nconst RegisterPage = () => {\n  return <Register />;\n};\n\nexport default RegisterPage;\n"],"names":["RegisterForm","styled","schema","yup","name","required","email","password","min","dispatch","useDispatch","formik","useFormik","initialValues","validationSchema","onSubmit","values","resetForm","register","handleSubmit","TextField","id","type","label","variant","value","onChange","handleChange","error","touched","Boolean","errors","helperText","Button","Typography","to"],"sourceRoot":""}