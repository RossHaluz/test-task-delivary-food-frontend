{"version":3,"file":"static/js/879.000d1077.chunk.js","mappings":"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","sources":["components/ProductItem/ProductItem.styled.jsx","components/ProductItem/ProductItem.jsx","components/Products/Products.styled.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/Products/Products.jsx","pages/ProductsPage.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { MdFavorite, MdFavoriteBorder } from 'react-icons/md';\n\nexport const FoodItemWraperr = styled.div`\n  position: relative;\n`\n\nexport const FavoriteBtnIcon = styled.button`\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  font-size: 24px;\n  background: none;\n  border: none;\n  cursor: pointer;\n`\n\nexport const FavoriteIcon = styled(MdFavorite)`\n  color: orange;\n\n  &:hover {\n    transform: scale(1.5);\n  }\n`\n\nexport const SelectFavoriteIcon = styled(MdFavoriteBorder)`\n  color: orange;\n\n&:hover {\n  transform: scale(1.5);\n}\n`\n\nexport const FoodItem = styled.li`\n  flex-basis: calc((100% - 30px * (1 - 1)) / 1);\n\n  @media (min-width: 768px) {\n    flex-basis: calc((100% - 30px * (2 - 1)) / 2);\n  }\n  @media (min-width: 1280px) {\n    flex-basis: calc((100% - 30px * (3 - 1)) / 3);\n  }\n`;\n\nexport const FoodItemDesc = styled.p`\n  max-width: 440px;\n`;\n\nexport const FoodItemBtn = styled.button`\n  background: none;\n  border: none;\n  background-color: #2196f3;\n  padding: 10px;\n  border-radius: 10px;\n  margin-top: 10px;\n  color: white;\n  font-size: 16px;\n  font-weight: 600;\n  cursor: pointer;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { FoodItem, FoodItemDesc, FoodItemBtn, FavoriteIcon, FoodItemWraperr, FavoriteBtnIcon, SelectFavoriteIcon } from './ProductItem.styled';\nimport { addItemToCart } from 'redux/orders/slice';\nimport { toast } from 'react-hot-toast';\nimport { NavLink, useLocation } from 'react-router-dom';\nimport { delateFavoriteItem, setFavoriteFood } from 'redux/foods/operetions';\nimport { selectIsLoging, selectUser } from 'redux/auth/selectors';\nimport { useState } from 'react';\n\n\nconst ProductItem = ({ title, img, desc, price, id, count, favorite }) => {\n  const dispatch = useDispatch();\n  const location = useLocation();\nconst {_id: userId} = useSelector(selectUser)\n  const isLogin = useSelector(selectIsLoging);\n  const [isFavorite, setIsFavorite] = useState(favorite.includes(userId))\n\n\n  const toggleFavoriteItem = (foodId) => {\n    if(isLogin){\n      if(!isFavorite){\n      dispatch(setFavoriteFood(foodId))\n      setIsFavorite(!isFavorite)\n      toast.success('Add item to favorite')\n      }else{\n        dispatch(delateFavoriteItem(foodId))\n        setIsFavorite(!isFavorite)\n        toast.success(\"Remove item from favorite\")\n      }\n    }else{\n      toast.error('You should be autorization')\n    }\n  }\n\n  const handleAddItemToCart = () => {\n    dispatch(addItemToCart({ title, img, desc, price, id, count }));\n    toast.success('Success add');\n  };\n\n  return (\n    <FoodItemWraperr>\n      <FoodItem>\n        <NavLink to={`/${id}`} state={{ from: location }}>\n          <img src={img} alt={title} width=\"426\" height=\"294px\" />\n          <div>\n            <h2>{title}</h2>\n            <FoodItemDesc>{desc}</FoodItemDesc>\n          </div>\n        </NavLink>\n        <p>{price} UAH</p>\n        <FoodItemBtn type=\"button\" onClick={handleAddItemToCart}>\n          Buy\n        </FoodItemBtn>\n      </FoodItem>\n      <FavoriteBtnIcon type='button' onClick={() => toggleFavoriteItem(id)}>\n        {isFavorite ? <FavoriteIcon/> :<SelectFavoriteIcon/>  }\n      </FavoriteBtnIcon>\n    </FoodItemWraperr>\n  );\n};\n\nexport default ProductItem;\n","import styled from \"@emotion/styled\";\n\nexport const FoodListContainer = styled.div`\n  display: flex;\n`;\n\nexport const FoodsList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 30px;\n  margin-top: 30px;\n`;\n","import styled from '@emotion/styled';\n\nexport const FilterBtn = styled.button`\n  background: none;\n  padding: 20px;\n  font-size: 16px;\n  font-weight: 500;\n  color: #030303;\n  border: 1px solid #2196f3;\n  cursor: pointer;\n  border-radius: 20px;\n`;\n\nexport const FilterBtnWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  padding: 40px;\n  border: 1px solid #030303;\n  border-radius: 10px;\n  max-height: 400px;\n  margin-top: 30px;\n  margin-right: 30px;\n`;\n","import { useState } from 'react';\nimport { FilterBtnWrapper, FilterBtn } from './Filter.styled';\nimport { useSearchParams } from 'react-router-dom';\nimport { getFoodsCategory } from 'redux/foods/operetions';\nimport { useDispatch } from 'react-redux';\nimport { setShopName } from 'redux/foods/slice';\n\nconst Filter = ({ current }) => {\n  const [query, setQuery] = useSearchParams();\n  const dispatch = useDispatch();\n  const category = query.get('shop');\n  const [categories] = useState([\n    {\n      id: 1,\n      name: 'Kegler',\n    },\n    {\n      id: 2,\n      name: 'Green House',\n    },\n    {\n      id: 3,\n      name: 'Dioscuri Mini',\n    },\n    {\n      id: 4,\n      name: 'Cook drive',\n    },\n  ]);\n\n  const onClickShop = value => {\n    setQuery({ shop: value });\n    dispatch(getFoodsCategory(category));\n    dispatch(setShopName(value))\n  };\n\n  return (\n    <FilterBtnWrapper>\n      <h3>Shops</h3>\n      {categories.map(({ id, name }) => {\n        return (\n          <FilterBtn\n            key={id}\n            type=\"button\"\n            style={{\n              backgroundColor: category === name ? '#2196f3' : 'white',\n              color: category === name ? 'white' : '#030303',\n              fontWeight: category === name ? '600' : '400',\n            }}\n            onClick={() => onClickShop(name)}\n          >\n            {name}\n          </FilterBtn>\n        );\n      })}\n    </FilterBtnWrapper>\n  );\n};\n\nexport default Filter;\n","import ProductItem from '../ProductItem';\nimport { FoodsList, FoodListContainer } from './Products.styled';\nimport Filter from '../Filter/Filter';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  isLoading,\n  selectCurrentPage,\n  selectCurrentPageCategory,\n  selectCurrentShop,\n  selectFoods,\n  selectPageQtyCategory,\n  selectTotalPage,\n} from 'redux/foods/selectors';\nimport { Oval } from 'react-loader-spinner';\nimport { Pagination, Stack, PaginationItem } from '@mui/material';\nimport {\n  changeCurrentPage,\n  changeCurrentPageCategory,\n} from 'redux/foods/slice';\nimport { getFoodsCategory } from 'redux/foods/operetions';\nimport { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Products = props => {\n  const items = useSelector(selectFoods).foods;\n  const isLoadingPage = useSelector(isLoading);\n  const page = useSelector(selectCurrentPage);\n  const pageQty = useSelector(selectTotalPage);\n  const currentShop = useSelector(selectCurrentShop);\n  const pageCategory = useSelector(selectCurrentPageCategory);\n  const pageQtyCategory = useSelector(selectPageQtyCategory);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (currentShop === '') {\n      return;\n    }\n\n    dispatch(getFoodsCategory({ pageCategory, currentShop }));\n  }, [dispatch, pageCategory, currentShop]);\n\n  return (\n    <>\n      {' '}\n      <FoodListContainer>\n        <Filter />\n        <FoodsList>\n          {isLoadingPage && !items ? (\n            <Oval\n              height={80}\n              width={80}\n              color=\"#2196f3\"\n              wrapperStyle={{}}\n              wrapperClass=\"\"\n              visible={true}\n              ariaLabel=\"oval-loading\"\n              secondaryColor=\"#2196f3\"\n              strokeWidth={2}\n              strokeWidthSecondary={2}\n            />\n          ) : (\n            items.map(({ title, img, desc, price, _id, count, favorite }) => {\n              return (\n                <ProductItem\n                  key={_id}\n                  id={_id}\n                  title={title}\n                  img={img}\n                  desc={desc}\n                  price={price}\n                  count={count}\n                  favorite={favorite}\n                />\n              );\n            })\n          )}\n        </FoodsList>\n      </FoodListContainer>\n      <Stack m=\"0 auto\" mt={5} mb={5}>\n        {!!pageQty && currentShop === '' ? (\n          <Pagination\n            count={pageQty}\n            page={page}\n            onChange={(_, num) => dispatch(changeCurrentPage(num))}\n            renderItem={item => {\n              return (\n                <PaginationItem\n                  component={Link}\n                  to={`/?page=${item.page}`}\n                  {...item}\n                />\n              );\n            }}\n            showFirstButton\n            showLastButton\n          />\n        ) : (\n          <Pagination\n            count={pageQtyCategory}\n            page={pageCategory}\n            onChange={(_, num) => dispatch(changeCurrentPageCategory(num))}\n            renderItem={item => {\n              return (\n                <PaginationItem\n                  component={Link}\n                  to={`/?shop=${currentShop}&page=${item.page}`}\n                  {...item}\n                />\n              );\n            }}\n            showFirstButton\n            showLastButton\n          />\n        )}\n      </Stack>\n    </>\n  );\n};\n\nexport default Products;\n","import Products from \"../components/Products\";\n\nconst ProductsPage = () => {\n  return <Products />;\n};\n\nexport default ProductsPage;\n"],"names":["FoodItemWraperr","styled","FavoriteBtnIcon","FavoriteIcon","MdFavorite","SelectFavoriteIcon","MdFavoriteBorder","FoodItem","FoodItemDesc","FoodItemBtn","title","img","desc","price","id","count","favorite","dispatch","useDispatch","location","useLocation","userId","useSelector","selectUser","_id","isLogin","selectIsLoging","useState","includes","isFavorite","setIsFavorite","to","state","from","src","alt","width","height","type","onClick","addItemToCart","toast","foodId","delateFavoriteItem","setFavoriteFood","FoodListContainer","FoodsList","FilterBtn","FilterBtnWrapper","current","useSearchParams","query","setQuery","category","get","name","categories","map","style","backgroundColor","color","fontWeight","shop","value","getFoodsCategory","setShopName","props","items","selectFoods","foods","isLoadingPage","isLoading","page","selectCurrentPage","pageQty","selectTotalPage","currentShop","selectCurrentShop","pageCategory","selectCurrentPageCategory","pageQtyCategory","selectPageQtyCategory","useEffect","wrapperStyle","wrapperClass","visible","ariaLabel","secondaryColor","strokeWidth","strokeWidthSecondary","Stack","m","mt","mb","Pagination","onChange","_","num","changeCurrentPage","renderItem","item","PaginationItem","component","Link","showFirstButton","showLastButton","changeCurrentPageCategory"],"sourceRoot":""}