{"version":3,"file":"static/js/304.efb9cff1.chunk.js","mappings":"6NAGaA,EAAWC,EAAAA,EAAAA,IAAH,uOAaRC,EAAQD,EAAAA,EAAAA,IAAH,8FAMLE,EAAaF,EAAAA,EAAAA,GAAH,uEAKVG,GAAgBH,EAAAA,EAAAA,GAAOI,EAAAA,GAAPJ,CAAH,mFAMbK,GAAiBL,EAAAA,EAAAA,GAAOM,EAAAA,GAAPN,CAAH,kIAQdO,EAAeP,EAAAA,EAAAA,OAAH,sJ,uCCUzB,EArC0B,SAAC,GAAmB,IAAjBQ,EAAgB,EAAhBA,UACrBC,GAAWC,EAAAA,EAAAA,MACjB,GAAwBC,EAAAA,EAAAA,IAAYC,EAAAA,IAE9BC,EAAgB,CACpBC,KAHF,EAAQA,KAINC,MAJF,EAAcA,OAad,OACE,SAAChB,EAAD,CAAUiB,QAPa,SAAAC,GACnBA,EAAEC,gBAAkBD,EAAEE,QACxBX,GAAU,EAEb,EAGC,UACE,UAACP,EAAD,YACE,SAACC,EAAD,UAAY,kBACZ,SAAC,KAAD,CACEW,cAAeA,EACfO,SAAU,SAAAC,GACRb,GAAU,GACVC,GAASa,EAAAA,EAAAA,IAASD,GACnB,EALH,UAOE,UAAClB,EAAD,YACE,SAACE,EAAD,CAAgBkB,KAAK,OAAOT,KAAK,UACjC,SAACT,EAAD,CAAgBkB,KAAK,QAAQT,KAAK,WAClC,SAACP,EAAD,CAAcgB,KAAK,SAAnB,SAA4B,kBAMvC,EC9CYC,EAAmBxB,EAAAA,EAAAA,IAAH,sEAKhByB,GAAezB,EAAAA,EAAAA,GAAOI,EAAAA,GAAPJ,CAAH,yHAQZ0B,EAAgB1B,EAAAA,EAAAA,MAAH,mFAMb2B,EAAgB3B,EAAAA,EAAAA,GAAH,wFAMb4B,GAAgB5B,EAAAA,EAAAA,GAAOM,EAAAA,GAAPN,CAAH,wIAQb6B,EAAc7B,EAAAA,EAAAA,OAAH,sJCgBxB,EAtCiB,WACf,IAAM8B,GAAOnB,EAAAA,EAAAA,IAAYC,EAAAA,IACzB,GAA4BmB,EAAAA,EAAAA,WAAS,GAArC,eAAOC,EAAP,KAAexB,EAAf,KAMMK,EAAgB,CACpBC,KAAMgB,EAAKhB,KACXC,MAAOe,EAAKf,OAGd,OACE,iCACE,SAACY,EAAD,UAAe,4BACf,UAACH,EAAD,YACE,SAAC,KAAD,CAAQX,cAAeA,EAAvB,UACE,UAACY,EAAD,YACE,UAACC,EAAD,WAAe,QAEb,SAACE,EAAD,CAAeL,KAAK,OAAOT,KAAK,OAAOmB,UAAQ,QAEjD,UAACP,EAAD,WAAe,SAEb,SAACE,EAAD,CAAeL,KAAK,QAAQT,KAAK,QAAQmB,UAAQ,QAEnD,SAACJ,EAAD,CAAaN,KAAK,SAASP,QAvBhB,WACnBR,GAAU,SAAA0B,GAAI,OAAKA,CAAL,GACf,EAqBS,SAAkD,sBAKrDF,IAAU,SAAC,EAAD,CAAmBxB,UAAWA,SAIhD,EC3CD,EAJiB,WACf,OAAO,SAAC,EAAD,GACR,ECCD,EAJiB,WACf,OAAO,SAAC,EAAD,GACR,C","sources":["components/ModalEditUserInfo/ModalEditUserInfo.styled.jsx","components/ModalEditUserInfo/ModalEditUserInfo.jsx","components/UserInfo/UserInfo.styled.jsx","components/UserInfo/UserInfo.jsx","components/UserData/UserData.jsx","pages/UserPage.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Form, Field } from 'formik';\n\nexport const Backdrop = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0.3);\n  z-index: 1200;\n`;\n\nexport const Modal = styled.div`\n  padding: 20px;\n  background-color: white;\n  border-radius: 10px;\n`;\n\nexport const ModalTitle = styled.h2`\n  margin-bottom: 10px;\n  text-align: center;\n`;\n\nexport const ModalEditForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n`;\n\nexport const ModalEditField = styled(Field)`\n  padding: 10px;\n  font-size: 16px;\n  border: none;\n  background: whitesmoke;\n  border-radius: 15px;\n`;\n\nexport const ModalEditBtn = styled.button`\n  padding: 10px;\n  font-size: 16px;\n  border: none;\n  background-color: #1976d2;\n  border-radius: 15px;\n  color: white;\n`;\n","import React from 'react';\nimport {\n  Backdrop,\n  Modal,\n  ModalTitle,\n  ModalEditForm,\n  ModalEditField,\n  ModalEditBtn,\n} from './ModalEditUserInfo.styled';\nimport { Formik } from 'formik';\nimport { selectUser } from 'redux/auth/selectors';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { editUser } from 'redux/auth/operetions';\n\nconst ModalEditUserInfo = ({ setIsOpen }) => {\n  const dispatch = useDispatch();\n  const { name, email } = useSelector(selectUser);\n\n  const initialValues = {\n    name: name,\n    email: email,\n  };\n\n  const onCloseEditModal = e => {\n    if (e.currentTarget === e.target) {\n      setIsOpen(false);\n    }\n  };\n\n  return (\n    <Backdrop onClick={onCloseEditModal}>\n      <Modal>\n        <ModalTitle>Edit profile</ModalTitle>\n        <Formik\n          initialValues={initialValues}\n          onSubmit={value => {\n            setIsOpen(false);\n            dispatch(editUser(value));\n          }}\n        >\n          <ModalEditForm>\n            <ModalEditField type=\"text\" name=\"name\" />\n            <ModalEditField type=\"email\" name=\"email\" />\n            <ModalEditBtn type=\"submit\">Edit</ModalEditBtn>\n          </ModalEditForm>\n        </Formik>\n      </Modal>\n    </Backdrop>\n  );\n};\n\nexport default ModalEditUserInfo;\n","import styled from '@emotion/styled';\nimport { Form, Field } from 'formik';\n\nexport const UserInfoWrapperr = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nexport const UserInfoForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  width: 350px;\n  margin-top: 30px;\n`;\n\nexport const UserInfoLable = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n`;\n\nexport const UserInfoTitle = styled.h2`\n  text-align: center;\n  margin-top: 30px;\n  font-size: 27px;\n`;\n\nexport const UserInfoField = styled(Field)`\n  padding: 20px;\n  font-size: 16px;\n  border-radius: 15px;\n  border: none;\n  background-color: whitesmoke;\n`;\n\nexport const UserInfoBtn = styled.button`\n  background-color: #1976d2;\n  font-size: 16px;\n  color: white;\n  padding: 20px;\n  border: none;\n  border-radius: 15px;\n`;\n","import ModalEditUserInfo from 'components/ModalEditUserInfo';\nimport { Formik } from 'formik';\nimport { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { selectUser } from 'redux/auth/selectors';\nimport {\n  UserInfoForm,\n  UserInfoLable,\n  UserInfoWrapperr,\n  UserInfoTitle,\n  UserInfoField,\n  UserInfoBtn,\n} from './UserInfo.styled';\n\nconst UserInfo = () => {\n  const user = useSelector(selectUser);\n  const [isOpen, setIsOpen] = useState(false);\n\n  const handleIsOpen = () => {\n    setIsOpen(prev => !prev);\n  };\n\n  const initialValues = {\n    name: user.name,\n    email: user.email,\n  };\n\n  return (\n    <>\n      <UserInfoTitle>Information about user</UserInfoTitle>\n      <UserInfoWrapperr>\n        <Formik initialValues={initialValues}>\n          <UserInfoForm>\n            <UserInfoLable>\n              Name\n              <UserInfoField type=\"text\" name=\"name\" disabled />\n            </UserInfoLable>\n            <UserInfoLable>\n              Email\n              <UserInfoField type=\"email\" name=\"email\" disabled />\n            </UserInfoLable>\n            <UserInfoBtn type=\"button\" onClick={handleIsOpen}>\n              Edit profile\n            </UserInfoBtn>\n          </UserInfoForm>\n        </Formik>\n        {isOpen && <ModalEditUserInfo setIsOpen={setIsOpen} />}\n      </UserInfoWrapperr>\n    </>\n  );\n};\n\nexport default UserInfo;\n","import UserInfo from 'components/UserInfo';\nimport React from 'react';\n\nconst UserData = () => {\n  return <UserInfo />;\n};\n\nexport default UserData;\n","import UserData from 'components/UserData';\n\nconst UserPage = () => {\n  return <UserData />;\n};\n\nexport default UserPage;\n"],"names":["Backdrop","styled","Modal","ModalTitle","ModalEditForm","Form","ModalEditField","Field","ModalEditBtn","setIsOpen","dispatch","useDispatch","useSelector","selectUser","initialValues","name","email","onClick","e","currentTarget","target","onSubmit","value","editUser","type","UserInfoWrapperr","UserInfoForm","UserInfoLable","UserInfoTitle","UserInfoField","UserInfoBtn","user","useState","isOpen","disabled","prev"],"sourceRoot":""}