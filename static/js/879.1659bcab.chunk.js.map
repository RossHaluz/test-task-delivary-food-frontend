{"version":3,"file":"static/js/879.1659bcab.chunk.js","mappings":"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","sources":["components/ProductItem/ProductItem.styled.jsx","components/ProductItem/ProductItem.jsx","components/Products/Products.styled.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/Products/Products.jsx","pages/ProductsPage.js","redux/foods/selectors.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const FoodItem = styled.li`\n  flex-basis: calc((100% - 30px * (1 - 1)) / 1);\n\n  @media (min-width: 768px) {\n    flex-basis: calc((100% - 30px * (2 - 1)) / 2);\n  }\n  @media (min-width: 1280px) {\n    flex-basis: calc((100% - 30px * (3 - 1)) / 3);\n  }\n`;\n\nexport const FoodItemDesc = styled.p`\n  max-width: 440px;\n`;\n\nexport const FoodItemBtn = styled.button`\n  background: none;\n  border: none;\n  background-color: #2196f3;\n  padding: 10px;\n  border-radius: 10px;\n  margin-top: 10px;\n  color: white;\n  font-size: 16px;\n  font-weight: 600;\n  cursor: pointer;\n`;\n","import { useDispatch } from 'react-redux';\nimport { FoodItem, FoodItemDesc, FoodItemBtn } from './ProductItem.styled';\nimport { addItemToCart } from 'redux/orders/slice';\nimport { toast } from 'react-hot-toast';\nimport { NavLink, useLocation } from 'react-router-dom';\n\nconst ProductItem = ({ title, img, desc, price, id, count }) => {\n  const dispatch = useDispatch();\n  const location = useLocation();\n\n  const handleAddItemToCart = () => {\n    dispatch(addItemToCart({ title, img, desc, price, id, count }));\n    toast.success('Success add');\n  };\n\n  return (\n    <>\n      <FoodItem>\n        <NavLink to={`/${id}`} state={{ from: location }}>\n          <img src={img} alt={title} width=\"426\" height=\"294px\" />\n          <div>\n            <h2>{title}</h2>\n            <FoodItemDesc>{desc}</FoodItemDesc>\n          </div>\n        </NavLink>\n        <p>{price} UAH</p>\n        <FoodItemBtn type=\"button\" onClick={handleAddItemToCart}>\n          Buy\n        </FoodItemBtn>\n      </FoodItem>\n    </>\n  );\n};\n\nexport default ProductItem;\n","import styled from \"@emotion/styled\";\n\nexport const FoodListContainer = styled.div`\n  display: flex;\n`;\n\nexport const FoodsList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 30px;\n  margin-top: 30px;\n`;\n","import styled from '@emotion/styled';\n\nexport const FilterBtn = styled.button`\n  background: none;\n  padding: 20px;\n  font-size: 16px;\n  font-weight: 500;\n  color: #030303;\n  border: 1px solid #2196f3;\n  cursor: pointer;\n  border-radius: 20px;\n`;\n\nexport const FilterBtnWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  padding: 40px;\n  border: 1px solid #030303;\n  border-radius: 10px;\n  max-height: 400px;\n  margin-top: 30px;\n  margin-right: 30px;\n`;\n","import { useState } from 'react';\nimport { FilterBtnWrapper, FilterBtn } from './Filter.styled';\n\nconst Filter = ({ setCurrentCategory, current }) => {\n  const [categories] = useState([\n    {\n      id: 1,\n      name: 'Kegler',\n    },\n    {\n      id: 2,\n      name: 'Green House',\n    },\n    {\n      id: 3,\n      name: 'Dioscuri Mini',\n    },\n    {\n      id: 4,\n      name: 'Cook drive',\n    },\n  ]);\n\n  const onClickShop = value => {\n    setCurrentCategory(value);\n  };\n\n  return (\n    <FilterBtnWrapper>\n      <h3>Shops</h3>\n      {categories.map(({ id, name }) => {\n        return (\n          <FilterBtn\n            key={id}\n            type=\"button\"\n            style={{\n              backgroundColor: current === name ? '#2196f3' : 'white',\n              color: current === name ? 'white' : '#030303',\n              fontWeight: current === name ? '600' : '400',\n            }}\n            onClick={() => onClickShop(name)}\n          >\n            {name}\n          </FilterBtn>\n        );\n      })}\n    </FilterBtnWrapper>\n  );\n};\n\nexport default Filter;\n","import ProductItem from '../ProductItem';\nimport { FoodsList, FoodListContainer } from './Products.styled';\nimport Filter from '../Filter/Filter';\nimport { useSelector } from 'react-redux';\nimport { isLoading, selectFoods } from 'redux/foods/selectors';\nimport { useState } from 'react';\nimport { Oval } from 'react-loader-spinner';\n\nconst Products = () => {\n  const items = useSelector(selectFoods);\n  const isLoadingPage = useSelector(isLoading);\n  const [current, setCurrent] = useState('Cook drive');\n\n  const setCurrentCategory = value => {\n    setCurrent(value);\n  };\n\n  return (\n    <FoodListContainer>\n      <Filter setCurrentCategory={setCurrentCategory} current={current} />\n      <FoodsList>\n        {isLoadingPage ? (\n          <Oval\n            height={80}\n            width={80}\n            color=\"#2196f3\"\n            wrapperStyle={{}}\n            wrapperClass=\"\"\n            visible={true}\n            ariaLabel=\"oval-loading\"\n            secondaryColor=\"#2196f3\"\n            strokeWidth={2}\n            strokeWidthSecondary={2}\n          />\n        ) : (\n          items\n            .filter(item => item.name === current)\n            .map(({ title, img, desc, price, _id, count }) => {\n              return (\n                <ProductItem\n                  key={_id}\n                  id={_id}\n                  title={title}\n                  img={img}\n                  desc={desc}\n                  price={price}\n                  count={count}\n                />\n              );\n            })\n        )}\n      </FoodsList>\n    </FoodListContainer>\n  );\n};\n\nexport default Products;\n","import Products from \"../components/Products\";\n\nconst ProductsPage = () => {\n  return <Products />;\n};\n\nexport default ProductsPage;\n","export const selectFoods = state => state.food.foods || [];\n\nexport const isLoading = state => state.food.isLoading;\n\nexport const selectCurrentFood = state => state.food.currentFood;\n"],"names":["FoodItem","styled","FoodItemDesc","FoodItemBtn","title","img","desc","price","id","count","dispatch","useDispatch","location","useLocation","to","state","from","src","alt","width","height","type","onClick","addItemToCart","toast","FoodListContainer","FoodsList","FilterBtn","FilterBtnWrapper","setCurrentCategory","current","useState","name","categories","map","style","backgroundColor","color","fontWeight","items","useSelector","selectFoods","isLoadingPage","isLoading","setCurrent","value","wrapperStyle","wrapperClass","visible","ariaLabel","secondaryColor","strokeWidth","strokeWidthSecondary","filter","item","_id","food","foods","selectCurrentFood","currentFood"],"sourceRoot":""}